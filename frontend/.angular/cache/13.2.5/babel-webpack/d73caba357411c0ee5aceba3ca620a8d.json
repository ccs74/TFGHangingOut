{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/chat.service\";\nimport * as i2 from \"src/app/services/usuario.service\";\nimport * as i3 from \"src/app/services/actividades.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\n\nfunction ChatsComponent_div_9_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const chat_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Hace \", chat_r2.dias, \" d\\u00EDas\");\n  }\n}\n\nfunction ChatsComponent_div_9_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \"Hoy\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"/chats/\", a1];\n};\n\nconst _c1 = function (a1) {\n  return [\"/usuarios/\", a1];\n};\n\nfunction ChatsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, ChatsComponent_div_9_p_1_Template, 2, 1, \"p\", 16);\n    i0.ɵɵtemplate(2, ChatsComponent_div_9_p_2_Template, 2, 0, \"p\", 17);\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 18);\n    i0.ɵɵelement(5, \"img\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 20)(7, \"h1\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"h2\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 21)(14, \"div\", 22);\n    i0.ɵɵelement(15, \"img\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const chat_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c0, chat_r2.uid));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", chat_r2.dias !== 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", chat_r2.dias === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(11, _c1, chat_r2.receptor));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"../../../assets/imgs/usuarios/\", chat_r2.fotoUsuario, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(chat_r2.receptor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chat_r2.titulo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chat_r2.fecha);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"../../../assets/imgs/actividades/\", chat_r2.fotoActividad, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ChatsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"p\");\n    i0.ɵɵtext(2, \"Todav\\u00EDa no has iniciado ninguna conversaci\\u00F3n\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let ChatsComponent = /*#__PURE__*/(() => {\n  class ChatsComponent {\n    constructor(chatService, usuarioService, actividadService) {\n      this.chatService = chatService;\n      this.usuarioService = usuarioService;\n      this.actividadService = actividadService;\n      this.listaChats = [];\n      this.listaVacia = false;\n    }\n\n    ngOnInit() {\n      this.cargarUsuario();\n    }\n\n    cargarUsuario() {\n      let usuario = localStorage.getItem('email');\n\n      if (!usuario) {\n        return;\n      }\n\n      this.usuarioService.cargarUsuario(\"\", usuario).subscribe(res => {\n        console.log(res);\n        this.idUsuario = res['existeUsuario'].uid;\n        this.cargarChats();\n      }, err => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'No se pudo completar la acción, vuelva a intentarlo'\n        });\n      });\n    }\n\n    cargarChats() {\n      this.chatService.cargarChats(this.idUsuario).subscribe(res => {\n        console.log(res);\n        this.listaChats = res['chats'];\n        this.listaChats = this.listaChats.sort((n1, n2) => {\n          if (n1.fecha_ultimoMensaje < n2.fecha_ultimoMensaje) {\n            return 1;\n          }\n\n          if (n1.fecha_ultimoMensaje > n2.fecha_ultimoMensaje) {\n            return -1;\n          }\n\n          return 0;\n        });\n\n        for (let i = 0; i < this.listaChats.length; i++) {\n          let receptor = \"\";\n\n          if (this.listaChats[i].usuario1 == this.idUsuario) {\n            receptor = this.listaChats[i].usuario2;\n          } else {\n            receptor = this.listaChats[i].usuario1;\n          }\n\n          this.usuarioService.cargarUsuario(receptor).subscribe(res => {\n            console.log(res['existeUsuario']);\n            let nombreRecep = res['existeUsuario'].nombre + \" \" + res['existeUsuario'].apellidos;\n\n            if (nombreRecep.length < 25) {\n              nombreRecep = nombreRecep.substring(0, 24);\n            }\n\n            this.listaChats[i].receptor = nombreRecep;\n            this.listaChats[i].fotoUsuario = res['existeUsuario'].foto;\n          }, err => {\n            console.log(err);\n          });\n          this.actividadService.cargarActividad(this.listaChats[i].actividad).subscribe(res => {\n            let tit = res['existeActividad'].titulo;\n\n            if (tit.length < 25) {\n              tit = tit.substring(0, 24);\n            }\n\n            this.listaChats[i].titulo = tit;\n            this.listaChats[i].fecha = this.convertirFecha(res['existeActividad'].fecha);\n            this.listaChats[i].fotoActividad = res['existeActividad'].fotos[0];\n          }, err => {\n            console.log(err);\n          });\n          this.chatService.calcularDias(this.listaChats[i].fecha_ultimoMensaje).subscribe(res => {\n            this.listaChats[i].dias = res.resultado;\n          }, err => {\n            console.log(err);\n          });\n        }\n\n        if (this.listaChats.length == 0) {\n          this.listaVacia = true;\n        } else {\n          this.listaVacia = false;\n        }\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    convertirFecha(date) {\n      let cadena = \"\";\n      let fecha = new Date(date);\n      let dia,\n          num,\n          mes,\n          hora,\n          min = \"\";\n\n      switch (fecha.getDay()) {\n        case 1:\n          dia = \"Lun\";\n          break;\n\n        case 2:\n          dia = \"Mar\";\n          break;\n\n        case 3:\n          dia = \"Mié\";\n          break;\n\n        case 4:\n          dia = \"Jue\";\n          break;\n\n        case 5:\n          dia = \"Vie\";\n          break;\n\n        case 6:\n          dia = \"Sáb\";\n          break;\n\n        case 0:\n          dia = \"Dom\";\n          break;\n      }\n\n      num = fecha.getDate().toString();\n\n      switch (fecha.getMonth()) {\n        case 0:\n          mes = \"Ene\";\n          break;\n\n        case 1:\n          mes = \"Feb\";\n          break;\n\n        case 2:\n          mes = \"Mar\";\n          break;\n\n        case 3:\n          mes = \"Abr\";\n          break;\n\n        case 4:\n          mes = \"May\";\n          break;\n\n        case 5:\n          mes = \"Jun\";\n          break;\n\n        case 6:\n          mes = \"Jul\";\n          break;\n\n        case 7:\n          mes = \"Ago\";\n          break;\n\n        case 8:\n          mes = \"Sep\";\n          break;\n\n        case 9:\n          mes = \"Oct\";\n          break;\n\n        case 10:\n          mes = \"Nov\";\n          break;\n\n        case 11:\n          mes = \"Dic\";\n          break;\n      }\n\n      let sh = fecha.getHours();\n\n      if (sh < 10) {\n        hora = \"0\" + sh.toString();\n      } else {\n        hora = sh.toString();\n      }\n\n      let sm = fecha.getMinutes();\n\n      if (sm < 10) {\n        min = \"0\" + sm.toString();\n      } else {\n        min = sm.toString();\n      }\n\n      cadena = dia + \", \" + num + \" \" + mes + \" · \" + hora + \":\" + min;\n      return cadena;\n    }\n\n  }\n\n  ChatsComponent.ɵfac = function ChatsComponent_Factory(t) {\n    return new (t || ChatsComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.ActividadesService));\n  };\n\n  ChatsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatsComponent,\n    selectors: [[\"app-chats\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[\"id\", \"admin-back\"], [1, \"admin-header\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"d-flex\"], [\"src\", \"../../../assets/imgs/Logo.png\", 1, \"logo\"], [\"routerLink\", \"/editar-perfil\", 1, \"fa-solid\", \"fa-user\", \"fa-3x\"], [1, \"listaChats\"], [\"class\", \"usuarioCard\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"listaVacia\", 4, \"ngIf\"], [1, \"navBarCliente\", \"d-flex\"], [\"routerLink\", \"/usuarios\", 1, \"fa-solid\", \"fa-user-group\", \"fa-3x\"], [\"routerLink\", \"/actividades/organizadas\", 1, \"fa-solid\", \"fa-rectangle-list\", \"fa-3x\"], [\"routerLink\", \"/resultados-actividades\", 1, \"fa-solid\", \"fa-magnifying-glass\", \"fa-3x\"], [1, \"clicked\"], [\"routerLink\", \"/chats\", 1, \"fa-solid\", \"fa-comments\", \"fa-3x\"], [1, \"usuarioCard\", 3, \"routerLink\"], [\"class\", \"text-right\", 4, \"ngIf\"], [\"class\", \"text-right mr-2\", 4, \"ngIf\"], [1, \"marcoFPerfil\", \"chat\", 3, \"routerLink\"], [1, \"fPerfil\", 3, \"src\"], [1, \"infoChat\", \"infoChat2\"], [1, \"d-flex\", \"justify-content-end\"], [1, \"marcoFActividadSmall\"], [1, \"fActividad\", 3, \"src\"], [1, \"text-right\"], [1, \"text-right\", \"mr-2\"], [1, \"listaVacia\"]],\n    template: function ChatsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"header\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementStart(5, \"h1\");\n        i0.ɵɵtext(6, \"Chats\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"i\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵtemplate(9, ChatsComponent_div_9_Template, 16, 13, \"div\", 7);\n        i0.ɵɵtemplate(10, ChatsComponent_div_10_Template, 3, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\")(13, \"button\");\n        i0.ɵɵelement(14, \"i\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\")(16, \"button\");\n        i0.ɵɵelement(17, \"i\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\")(19, \"button\");\n        i0.ɵɵelement(20, \"i\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"button\");\n        i0.ɵɵelement(23, \"i\", 14);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listaChats);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.listaVacia);\n      }\n    },\n    directives: [i4.RouterLink, i5.NgForOf, i5.NgIf],\n    styles: [\"\"]\n  });\n  return ChatsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}