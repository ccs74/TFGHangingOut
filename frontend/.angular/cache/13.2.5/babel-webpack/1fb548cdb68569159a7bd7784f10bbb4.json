{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/usuario.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \"* El email es obligatorio y debe ser v\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"campo-incorrecto\": a0\n  };\n};\n\nfunction LoginComponent_input_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 26);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, !ctx_r1.campoValido(\"password\")));\n  }\n}\n\nfunction LoginComponent_input_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 27);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, !ctx_r2.campoValido(\"password\")));\n  }\n}\n\nfunction LoginComponent_i_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 28);\n    i0.ɵɵlistener(\"click\", function LoginComponent_i_15_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.mostrarPassword();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_i_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 29);\n    i0.ɵɵlistener(\"click\", function LoginComponent_i_16_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.mostrarPassword();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \"* La contrase\\u00F1a es obligatoria\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_i_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 30);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, usuarioService, router, zone) {\n      this.fb = fb;\n      this.usuarioService = usuarioService;\n      this.router = router;\n      this.zone = zone;\n      this.formSubmit = false;\n      this.waiting = false;\n      this.mostrarPass = false;\n      this.loginForm = this.fb.group({\n        email: [localStorage.getItem('email') || '', [Validators.required, Validators.email]],\n        password: ['', Validators.required],\n        remember: [false || localStorage.getItem('email')]\n      });\n    }\n\n    ngOnInit() {\n      this.renderButton();\n    }\n\n    renderButton() {\n      this.startApp();\n    }\n\n    startApp() {\n      gapi.load('auth2', () => {\n        const client_id = environment.client_id;\n        this.auth2 = gapi.auth2.init({\n          client_id,\n          cookiepolicy: 'single_host_origin'\n        });\n        this.attachSignin(document.getElementById('my-signin2'));\n      });\n    }\n\n    attachSignin(element) {\n      this.auth2.attachClickHandler(element, {}, googleUser => {\n        var id_token = googleUser.getAuthResponse().id_token;\n        this.waiting = true;\n        this.usuarioService.loginGoogle(id_token).subscribe(res => {\n          this.usuarioService.cargarUsuario(res['uid']).subscribe(ress => {\n            var _a, _b;\n\n            let rol = ress['existeUsuario'].rol;\n            this.waiting = false;\n\n            switch (rol) {\n              case 'ROL_ADMIN':\n                localStorage.setItem('email', (_a = this.loginForm.get('email')) === null || _a === void 0 ? void 0 : _a.value);\n                this.router.navigateByUrl('/admin/usuarios');\n                break;\n\n              case 'ROL_USUARIO':\n                this.usuarioService.cargarUsuario(\"\", (_b = this.loginForm.get('email')) === null || _b === void 0 ? void 0 : _b.value).subscribe(res => {\n                  var _a;\n\n                  localStorage.setItem('email', (_a = this.loginForm.get('email')) === null || _a === void 0 ? void 0 : _a.value);\n\n                  if (res['existeUsuario'].firstTime == true) {\n                    this.router.navigateByUrl('/elegir-categorias');\n                  } else {\n                    this.router.navigateByUrl('/resultados-actividades');\n                  }\n                }, err => {\n                  Swal.fire({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: 'No se pudo completar la acción, vuelva a intentarlo'\n                  });\n                });\n                break;\n            }\n          }, err => {\n            if (err.error.estado == 'Pendiente') {\n              this.lanzarError({\n                title: 'Falta verificación',\n                text: 'Antes de iniciar sesión necesitamos verificar tu cuenta. Por favor, revisa en la bandeja de entrada de tu correo electrónico para activar tu cuenta.',\n                icon: 'warning'\n              });\n              return;\n            }\n\n            if (err.error.estado == 'pendienteGoogle') {\n              this.waiting = false;\n              Swal.fire({\n                title: 'Debes crear una contraseña',\n                text: 'Para poder iniciar sesión en nuestra plataforma debes crear una contraseña',\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonText: 'Crear Contraseña',\n                cancelButtonText: 'Cancelar',\n                allowOutsideClick: false\n              }).then(result => {\n                if (result.isConfirmed) {\n                  this.router.navigateByUrl('/recovery');\n                }\n              });\n            }\n\n            this.lanzarError({\n              title: 'Error!',\n              text: `${err.error.msg}` || 'No pudo completarse la acción, vuelva a intentarlo más tarde',\n              icon: 'error'\n            });\n          });\n        }, err => {\n          Swal.fire({\n            title: 'Error!',\n            text: `${err.error.msg}` || 'Debes registrarte primero con tu cuenta de google para iniciar sesión',\n            icon: 'error',\n            confirmButtonText: 'Ok',\n            allowOutsideClick: false\n          });\n          this.waiting = false;\n        });\n      }, function (error) {});\n    }\n\n    login() {\n      this.formSubmit = true;\n\n      if (!this.loginForm.valid) {\n        return;\n      }\n\n      this.waiting = true;\n      console.log(this.loginForm.value);\n      this.usuarioService.login(this.loginForm.value).subscribe(res => {\n        var _a, _b, _c, _d;\n\n        if ((_a = this.loginForm.get('remember')) === null || _a === void 0 ? void 0 : _a.value) {\n          localStorage.setItem('email', (_b = this.loginForm.get('email')) === null || _b === void 0 ? void 0 : _b.value);\n        } else {\n          localStorage.removeItem('email');\n        }\n\n        this.waiting = false;\n\n        switch (res.rol) {\n          case 'ROL_ADMIN':\n            localStorage.setItem('email', (_c = this.loginForm.get('email')) === null || _c === void 0 ? void 0 : _c.value);\n            this.router.navigateByUrl('/admin/usuarios');\n            break;\n\n          case 'ROL_USUARIO':\n            this.usuarioService.cargarUsuario(\"\", (_d = this.loginForm.get('email')) === null || _d === void 0 ? void 0 : _d.value).subscribe(res => {\n              var _a;\n\n              localStorage.setItem('email', (_a = this.loginForm.get('email')) === null || _a === void 0 ? void 0 : _a.value);\n\n              if (res['existeUsuario'].firstTime == true) {\n                this.router.navigateByUrl('/elegir-categorias');\n              } else {\n                this.router.navigateByUrl('/resultados-actividades');\n              }\n            }, err => {\n              Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'No se pudo completar la acción, vuelva a intentarlo'\n              });\n            });\n            break;\n        }\n      }, err => {\n        if (err.error.estado == 'Pendiente') {\n          this.lanzarError({\n            title: 'Falta verificación',\n            text: 'Antes de iniciar sesión necesitamos verificar tu cuenta. Por favor, revisa en la bandeja de entrada de tu correo electrónico para activar tu cuenta.',\n            icon: 'warning'\n          });\n          return;\n        }\n\n        if (err.error.estado == 'pendienteGoogle') {\n          this.waiting = false;\n          Swal.fire({\n            title: 'Debes crear una contraseña',\n            text: 'Para poder iniciar sesión en nuestra plataforma debes crear una contraseña',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Crear Contraseña',\n            cancelButtonText: 'Cancelar',\n            allowOutsideClick: false\n          }).then(result => {\n            if (result.isConfirmed) {\n              this.router.navigateByUrl('/recovery');\n            }\n          });\n        }\n\n        this.lanzarError({\n          title: 'Error!',\n          text: `${err.error.msg}` || 'No pudo completarse la acción, vuelva a intentarlo más tarde',\n          icon: 'error'\n        });\n      });\n    }\n\n    lanzarError(datos) {\n      Swal.fire({\n        title: datos.title,\n        text: datos.text,\n        icon: datos.icon,\n        confirmButtonText: 'Ok',\n        allowOutsideClick: false\n      });\n      this.waiting = false;\n    }\n\n    mostrarPassword() {\n      if (this.mostrarPass) {\n        this.mostrarPass = false;\n      } else {\n        this.mostrarPass = true;\n      }\n    }\n\n    campoValido(campo) {\n      var _a;\n\n      return ((_a = this.loginForm.get(campo)) === null || _a === void 0 ? void 0 : _a.valid) || !this.formSubmit;\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 38,\n    vars: 11,\n    consts: [[1, \"d-flex\", \"align-content-between\", \"flex-wrap\"], [\"src\", \"../../../assets/imgs/LogoImgs.png\", 1, \"mx-auto\", \"mt-5\", \"logo\"], [1, \"tituloLogin\"], [1, \"formulario\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-section\", \"my-3\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"placeholder\", \"Email\", \"type\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"small text-danger font-italic invalid-msg\", 4, \"ngIf\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"class\", \"form-control\", \"type\", \"text\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\", 3, \"ngClass\", 4, \"ngIf\"], [\"formControlName\", \"password\", \"class\", \"form-control\", \"type\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"fa-solid fa-eye fa-2x\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"fa-solid fa-eye-slash fa-2x\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"/recovery\", 1, \"link-primary\", \"forgot-pswd\", \"enlace\", \"mb-5\"], [\"type\", \"submit\", 1, \"big-button\", \"mt-4\"], [\"class\", \"fa fa-spinner fa-spin mr-2\", 4, \"ngIf\"], [1, \"checkbox\"], [\"formControlName\", \"remember\", \"type\", \"checkbox\"], [1, \"tituloLogin2\"], [\"id\", \"my-signin2\", 1, \"d-flex\", \"m-auto\", \"justify-content-center\", \"pt-3\"], [\"src\", \"../../../assets/imgs/logoGoogle.png\", 1, \"loginLogo\"], [1, \"d-flex\", \"mx-auto\", \"justify-content-center\", \"mt-3\"], [1, \"enlace\"], [\"routerLink\", \"/registro\", 1, \"signin\"], [1, \"small\", \"text-danger\", \"font-italic\", \"invalid-msg\"], [\"formControlName\", \"password\", \"type\", \"text\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [1, \"fa-solid\", \"fa-eye\", \"fa-2x\", 3, \"click\"], [1, \"fa-solid\", \"fa-eye-slash\", \"fa-2x\", 3, \"click\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\", \"mr-2\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\")(1, \"div\", 0);\n        i0.ɵɵelement(2, \"img\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"h1\", 2);\n        i0.ɵɵtext(4, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelement(8, \"label\", 6)(9, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, LoginComponent_p_10_Template, 2, 0, \"p\", 8);\n        i0.ɵɵelementStart(11, \"div\", 5);\n        i0.ɵɵelement(12, \"label\", 9);\n        i0.ɵɵtemplate(13, LoginComponent_input_13_Template, 1, 3, \"input\", 10);\n        i0.ɵɵtemplate(14, LoginComponent_input_14_Template, 1, 3, \"input\", 11);\n        i0.ɵɵtemplate(15, LoginComponent_i_15_Template, 1, 0, \"i\", 12);\n        i0.ɵɵtemplate(16, LoginComponent_i_16_Template, 1, 0, \"i\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, LoginComponent_p_17_Template, 2, 0, \"p\", 8);\n        i0.ɵɵelementStart(18, \"div\")(19, \"a\", 14);\n        i0.ɵɵtext(20, \"He olvidado mi contrase\\u00F1a\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"button\", 15);\n        i0.ɵɵtemplate(22, LoginComponent_i_22_Template, 1, 0, \"i\", 16);\n        i0.ɵɵtext(23, \" Entrar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\")(25, \"label\", 17);\n        i0.ɵɵelement(26, \"input\", 18);\n        i0.ɵɵtext(27, \" Recu\\u00E9rdame \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"div\")(29, \"h3\", 19);\n        i0.ɵɵtext(30, \"Inicia Sesi\\u00F3n con:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 20);\n        i0.ɵɵelement(32, \"img\", 21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 22)(34, \"p\", 23);\n        i0.ɵɵtext(35, \"\\u00BFNo tienes cuenta? \");\n        i0.ɵɵelementStart(36, \"a\", 24);\n        i0.ɵɵtext(37, \" Reg\\u00EDstrate\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, !ctx.campoValido(\"email\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.campoValido(\"email\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.mostrarPass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.mostrarPass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.mostrarPass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mostrarPass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.campoValido(\"password\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.waiting);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i4.NgClass, i4.NgIf, i3.RouterLinkWithHref, i1.CheckboxControlValueAccessor],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}