{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/chat.service\";\nimport * as i2 from \"src/app/services/usuario.service\";\nimport * as i3 from \"../../services/actividades.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\n\nfunction ChatComponent_div_11_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 26);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"../../../assets/imgs/usuarios/\", ctx_r8.receptor.foto, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"/usuarios/\", a1];\n};\n\nfunction ChatComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_11_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.setBefore();\n    });\n    i0.ɵɵtemplate(1, ChatComponent_div_11_img_1_Template, 1, 1, \"img\", 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.receptor.uid));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.receptor);\n  }\n}\n\nfunction ChatComponent_h1_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r1.receptor.nombre, \" \", ctx_r1.receptor.apellidos, \"\");\n  }\n}\n\nfunction ChatComponent_h2_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.actividad.titulo);\n  }\n}\n\nfunction ChatComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"h2\", 28);\n    i0.ɵɵtext(2, \"Pregunta cualquier duda sobre la actividad\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ChatComponent_div_18_div_1_h2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mensaje_r12 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassMap(mensaje_r12.clase);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(mensaje_r12.texto);\n  }\n}\n\nfunction ChatComponent_div_18_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h5\", 35);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const mensaje_r12 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mensaje_r12.texto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mensaje_r12.hora);\n  }\n}\n\nfunction ChatComponent_div_18_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"h5\", 35);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\")(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h4\", 38);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const mensaje_r12 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(mensaje_r12.hora);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(mensaje_r12.texto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mensaje_r12.estado);\n  }\n}\n\nfunction ChatComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ChatComponent_div_18_div_1_h2_1_Template, 2, 4, \"h2\", 31);\n    i0.ɵɵtemplate(2, ChatComponent_div_18_div_1_div_2_Template, 5, 2, \"div\", 32);\n    i0.ɵɵtemplate(3, ChatComponent_div_18_div_1_div_3_Template, 9, 3, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mensaje_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", mensaje_r12.clase == \"fechaChat\" || mensaje_r12.clase == \"fechaChat2\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", mensaje_r12.clase == \"recibido\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", mensaje_r12.clase == \"enviado\");\n  }\n}\n\nfunction ChatComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, ChatComponent_div_18_div_1_Template, 4, 3, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.listaMensajes);\n  }\n}\n\nfunction ChatComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"h2\");\n    i0.ɵɵtext(2, \"Usuario bloqueado, no puedes enviar ni recibir mensajes\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ChatComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"i\", 40);\n    i0.ɵɵelementStart(2, \"input\", 41, 42);\n    i0.ɵɵlistener(\"keyup.enter\", function ChatComponent_div_21_Template_input_keyup_enter_2_listener() {\n      i0.ɵɵrestoreView(_r21);\n\n      const _r19 = i0.ɵɵreference(3);\n\n      const ctx_r20 = i0.ɵɵnextContext();\n      ctx_r20.enviarMensaje(_r19.value);\n      return _r19.value = \"\";\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"i\", 43);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_21_Template_i_click_4_listener() {\n      i0.ɵɵrestoreView(_r21);\n\n      const _r19 = i0.ɵɵreference(3);\n\n      const ctx_r22 = i0.ɵɵnextContext();\n      ctx_r22.enviarMensaje(_r19.value);\n      return _r19.value = \"\";\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ChatComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelement(1, \"i\", 40)(2, \"input\", 45, 42)(4, \"i\", 46);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(chatService, usuarioService, actividadService, fb, router, route) {\n      this.chatService = chatService;\n      this.usuarioService = usuarioService;\n      this.actividadService = actividadService;\n      this.fb = fb;\n      this.router = router;\n      this.route = route;\n      this.mensajeForm = this.fb.group({\n        emisor: [''],\n        receptor: [''],\n        texto: [''],\n        chat: [''],\n        fecha: ['']\n      });\n      this.chatForm = this.fb.group({\n        usuario1: [''],\n        usuario2: [''],\n        actividad: ['']\n      });\n      this.nuevo = false;\n      this.texto = \"\";\n      this.listaMensajes = [];\n      this.listaBloqueados = [];\n      this.bloqueado = false;\n    }\n\n    ngOnInit() {\n      this.someId = this.route.snapshot.params['uid'];\n      this.cargarUsuario();\n      this.queTengo();\n    }\n\n    queTengo() {\n      let idChat = false;\n      this.chatService.chatOActividad(this.someId).subscribe(res => {\n        //Si tengo el id del chat\n        if (res['msg'] == \"Es un chat\") {\n          this.chatId = this.someId;\n          this.chatService.cargarChats(this.chatId).subscribe(chat => {\n            this.chat = chat['chats'];\n\n            if (this.chat.usuario1 == this.idUsuario) {\n              this.idReceptor = this.chat.usuario2;\n            } else {\n              this.idReceptor = this.chat.usuario1;\n            }\n\n            this.cargarUsuario(this.idReceptor);\n            console.log(this.chat);\n            this.actividadService.cargarActividad(this.chat.actividad).subscribe(act => {\n              console.log(act);\n              this.actividad = act['existeActividad'];\n              this.fecha = this.convertirFecha(this.actividad.fecha);\n              this.cargarMensajes();\n            }, err => {\n              console.log(err);\n            });\n          }, err => {\n            console.log(err);\n          });\n        } else {\n          //Si tengo el id de la actividad\n          this.actividadId = this.someId;\n          this.actividadService.cargarActividad(this.actividadId).subscribe(act => {\n            console.log(act);\n            this.actividad = act['existeActividad'];\n            this.idReceptor = this.actividad.organizador;\n            this.cargarUsuario(this.idReceptor);\n            this.fecha = this.convertirFecha(this.actividad.fecha);\n            this.chatService.obtenerChat(this.idUsuario, this.actividad.organizador).subscribe(chat => {\n              console.log(chat);\n\n              if (chat['chat'].uid !== undefined) {\n                console.log(chat['chat'].uid);\n                this.chatId = chat['chat'].uid;\n                this.cargarMensajes();\n              } else {\n                this.chatId = 'nuevo';\n                this.nuevo = true;\n              }\n            }, err => {\n              console.log(err);\n            });\n          }, err => {\n            console.log(err);\n          });\n        }\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    enviarMensaje(text) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      if (text != \"\") {\n        this.texto = text;\n\n        if (this.nuevo) {\n          (_a = this.chatForm.get('usuario1')) === null || _a === void 0 ? void 0 : _a.setValue(this.idUsuario);\n          (_b = this.chatForm.get('usuario2')) === null || _b === void 0 ? void 0 : _b.setValue(this.idReceptor);\n          (_c = this.chatForm.get('actividad')) === null || _c === void 0 ? void 0 : _c.setValue(this.actividadId);\n          this.chatService.crearChat(this.chatForm.value).subscribe(res => {\n            var _a, _b, _c, _d, _e;\n\n            this.chatId = res['chat'].uid;\n            (_a = this.mensajeForm.get('emisor')) === null || _a === void 0 ? void 0 : _a.setValue(this.idUsuario);\n            (_b = this.mensajeForm.get('receptor')) === null || _b === void 0 ? void 0 : _b.setValue(this.idReceptor);\n            (_c = this.mensajeForm.get('texto')) === null || _c === void 0 ? void 0 : _c.setValue(this.texto);\n            (_d = this.mensajeForm.get('chat')) === null || _d === void 0 ? void 0 : _d.setValue(this.chatId);\n            let fecha = new Date();\n            (_e = this.mensajeForm.get('fecha')) === null || _e === void 0 ? void 0 : _e.setValue(fecha);\n            this.chatService.enviarMensaje(this.chatId, this.mensajeForm.value).subscribe(res => {\n              console.log(res);\n              this.nuevo = false; // this.cargarChat();\n            }, err => {\n              console.log(err);\n            });\n          }, err => {\n            console.log(err);\n          });\n        } else {\n          (_d = this.mensajeForm.get('emisor')) === null || _d === void 0 ? void 0 : _d.setValue(this.idUsuario);\n          (_e = this.mensajeForm.get('receptor')) === null || _e === void 0 ? void 0 : _e.setValue(this.idReceptor);\n          (_f = this.mensajeForm.get('texto')) === null || _f === void 0 ? void 0 : _f.setValue(this.texto);\n          (_g = this.mensajeForm.get('chat')) === null || _g === void 0 ? void 0 : _g.setValue(this.chatId);\n          let fecha = new Date();\n          (_h = this.mensajeForm.get('fecha')) === null || _h === void 0 ? void 0 : _h.setValue(fecha);\n          this.chatService.enviarMensaje(this.chatId, this.mensajeForm.value).subscribe(res => {\n            console.log(res);\n            this.cargarMensajes();\n          }, err => {\n            console.log(err);\n          });\n        }\n      }\n    }\n\n    cargarUsuario(idUsuario) {\n      let id = \"\";\n\n      if (idUsuario) {\n        id = idUsuario;\n      }\n\n      let usuario = localStorage.getItem('email');\n\n      if (!usuario) {\n        return;\n      }\n\n      this.usuarioService.cargarUsuario(id, usuario).subscribe(res => {\n        console.log(res);\n\n        if (idUsuario) {\n          this.receptor = res['existeUsuario'];\n          console.log(this.receptor);\n\n          for (let i = 0; i < this.listaBloqueados.length; i++) {\n            if (this.listaBloqueados[i] == this.receptor.uid) {\n              this.bloqueado = true;\n            }\n          }\n\n          console.log(this.bloqueado);\n        } else {\n          this.idUsuario = res['existeUsuario'].uid;\n          this.listaBloqueados = res['existeUsuario'].bloqueados;\n          console.log(this.listaBloqueados);\n        }\n      }, err => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'No se pudo completar la acción, vuelva a intentarlo'\n        });\n      });\n    }\n\n    cargarMensajes() {\n      this.chatService.cargarMensajes(this.chatId, this.idUsuario).subscribe(res => {\n        console.log(res);\n        this.listaMensajes = res['mensajes'];\n\n        for (let i = 0; i < this.listaMensajes.length; i++) {\n          console.log(this.idUsuario);\n          this.listaMensajes[i].hora = this.cargarHora(this.listaMensajes[i].fecha);\n\n          if (this.listaMensajes[i].emisor == this.idUsuario) {\n            this.listaMensajes[i].clase = \"enviado\";\n          } else {\n            this.listaMensajes[i].clase = \"recibido\";\n          }\n        }\n\n        let ultFecha = new Date();\n        let fechaAnterior = \"\";\n\n        for (let i = 0; i < this.listaMensajes.length; i++) {\n          if (i == 0 || ultFecha < this.listaMensajes[i].fecha) {\n            ultFecha = this.listaMensajes[i].fecha;\n\n            if (i == 0) {\n              let mesg = {\n                uid: \"\",\n                texto: this.convertirFecha2(ultFecha),\n                emisor: \"\",\n                receptor: \"\",\n                chat: this.listaMensajes[i].uid,\n                fecha: this.listaMensajes[i].fecha,\n                clase: \"fechaChat2\"\n              };\n\n              if (this.convertirFecha2(ultFecha) !== fechaAnterior) {\n                this.listaMensajes.splice(i, 0, mesg);\n              }\n            } else {\n              let mesg = {\n                uid: \"\",\n                texto: this.convertirFecha2(ultFecha),\n                emisor: \"\",\n                receptor: \"\",\n                chat: this.listaMensajes[i].uid,\n                fecha: this.listaMensajes[i].fecha,\n                clase: \"fechaChat\"\n              };\n\n              if (this.convertirFecha2(ultFecha) !== fechaAnterior) {\n                this.listaMensajes.splice(i, 0, mesg);\n              }\n            }\n\n            fechaAnterior = this.convertirFecha2(ultFecha);\n          }\n        }\n\n        console.log(this.listaMensajes);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    cargarHora(date) {\n      let cadena = \"\";\n      let fecha = new Date(date);\n      let hora,\n          min = \"\";\n      let sh = fecha.getHours();\n\n      if (sh < 10) {\n        hora = \"0\" + sh.toString();\n      } else {\n        hora = sh.toString();\n      }\n\n      let sm = fecha.getMinutes();\n\n      if (sm < 10) {\n        min = \"0\" + sm.toString();\n      } else {\n        min = sm.toString();\n      }\n\n      cadena = hora + \":\" + min;\n      return cadena;\n    }\n\n    convertirFecha(date) {\n      let cadena = \"\";\n      let fecha = new Date(date);\n      let dia,\n          num,\n          mes,\n          hora,\n          min = \"\";\n\n      switch (fecha.getDay()) {\n        case 1:\n          dia = \"Lun\";\n          break;\n\n        case 2:\n          dia = \"Mar\";\n          break;\n\n        case 3:\n          dia = \"Mié\";\n          break;\n\n        case 4:\n          dia = \"Jue\";\n          break;\n\n        case 5:\n          dia = \"Vie\";\n          break;\n\n        case 6:\n          dia = \"Sáb\";\n          break;\n\n        case 0:\n          dia = \"Dom\";\n          break;\n      }\n\n      num = fecha.getDate().toString();\n\n      switch (fecha.getMonth()) {\n        case 0:\n          mes = \"Ene\";\n          break;\n\n        case 1:\n          mes = \"Feb\";\n          break;\n\n        case 2:\n          mes = \"Mar\";\n          break;\n\n        case 3:\n          mes = \"Abr\";\n          break;\n\n        case 4:\n          mes = \"May\";\n          break;\n\n        case 5:\n          mes = \"Jun\";\n          break;\n\n        case 6:\n          mes = \"Jul\";\n          break;\n\n        case 7:\n          mes = \"Ago\";\n          break;\n\n        case 8:\n          mes = \"Sep\";\n          break;\n\n        case 9:\n          mes = \"Oct\";\n          break;\n\n        case 10:\n          mes = \"Nov\";\n          break;\n\n        case 11:\n          mes = \"Dic\";\n          break;\n      }\n\n      let sh = fecha.getHours();\n\n      if (sh < 10) {\n        hora = \"0\" + sh.toString();\n      } else {\n        hora = sh.toString();\n      }\n\n      let sm = fecha.getMinutes();\n\n      if (sm < 10) {\n        min = \"0\" + sm.toString();\n      } else {\n        min = sm.toString();\n      }\n\n      cadena = dia + \", \" + num + \" \" + mes + \" · \" + hora + \":\" + min;\n      return cadena;\n    }\n\n    convertirFecha2(date) {\n      let cadena = \"\";\n      let fecha = new Date(date);\n      let dia,\n          num,\n          mes = \"\";\n\n      switch (fecha.getDay()) {\n        case 1:\n          dia = \"Lun\";\n          break;\n\n        case 2:\n          dia = \"Mar\";\n          break;\n\n        case 3:\n          dia = \"Mié\";\n          break;\n\n        case 4:\n          dia = \"Jue\";\n          break;\n\n        case 5:\n          dia = \"Vie\";\n          break;\n\n        case 6:\n          dia = \"Sáb\";\n          break;\n\n        case 0:\n          dia = \"Dom\";\n          break;\n      }\n\n      num = fecha.getDate().toString();\n\n      switch (fecha.getMonth()) {\n        case 0:\n          mes = \"Ene\";\n          break;\n\n        case 1:\n          mes = \"Feb\";\n          break;\n\n        case 2:\n          mes = \"Mar\";\n          break;\n\n        case 3:\n          mes = \"Abr\";\n          break;\n\n        case 4:\n          mes = \"May\";\n          break;\n\n        case 5:\n          mes = \"Jun\";\n          break;\n\n        case 6:\n          mes = \"Jul\";\n          break;\n\n        case 7:\n          mes = \"Ago\";\n          break;\n\n        case 8:\n          mes = \"Sep\";\n          break;\n\n        case 9:\n          mes = \"Oct\";\n          break;\n\n        case 10:\n          mes = \"Nov\";\n          break;\n\n        case 11:\n          mes = \"Dic\";\n          break;\n      }\n\n      cadena = dia + \", \" + num + \" \" + mes;\n      return cadena;\n    }\n\n    setBefore() {\n      localStorage.setItem('before', `/chats/${this.someId}`);\n    }\n\n  }\n\n  ChatComponent.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.ActividadesService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n\n  ChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-chat\"]],\n    decls: 36,\n    vars: 9,\n    consts: [[\"id\", \"admin-back\"], [1, \"admin-header\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"d-flex\"], [\"src\", \"../../../assets/imgs/Logo.png\", 1, \"logo\"], [\"routerLink\", \"/editar-perfil\", 1, \"fa-solid\", \"fa-user\", \"fa-3x\"], [1, \"backChat\"], [1, \"chatHeader\", \"d-flex\"], [\"routerLink\", \"/chats\", 1, \"fa-solid\", \"fa-arrow-rotate-left\", \"fa-2x\"], [\"class\", \"marcoFPerfil\", 3, \"routerLink\", \"click\", 4, \"ngIf\"], [1, \"infoChat\"], [4, \"ngIf\"], [\"class\", \"conver fondoVacio\", 4, \"ngIf\"], [\"class\", \"conver\", 4, \"ngIf\"], [\"class\", \"msgChat2\", 4, \"ngIf\"], [1, \"enviarMensaje\"], [\"class\", \"d-flex \", 4, \"ngIf\"], [\"class\", \"d-flex bloqueado\", 4, \"ngIf\"], [1, \"navBarCliente\", \"d-flex\"], [\"routerLink\", \"/usuarios\", 1, \"fa-solid\", \"fa-user-group\", \"fa-3x\"], [\"routerLink\", \"/actividades/organizadas\", 1, \"fa-solid\", \"fa-rectangle-list\", \"fa-3x\"], [\"routerLink\", \"/resultados-actividades\", 1, \"fa-solid\", \"fa-magnifying-glass\", \"fa-3x\"], [1, \"clicked\"], [\"routerLink\", \"/chats\", 1, \"fa-solid\", \"fa-comments\", \"fa-3x\"], [1, \"marcoFPerfil\", 3, \"routerLink\", \"click\"], [\"class\", \"fPerfil\", 3, \"src\", 4, \"ngIf\"], [1, \"fPerfil\", 3, \"src\"], [1, \"conver\", \"fondoVacio\"], [1, \"msgChat\"], [1, \"conver\"], [4, \"ngFor\", \"ngForOf\"], [3, \"class\", 4, \"ngIf\"], [\"class\", \"d-flex mensajeRecibido\", 4, \"ngIf\"], [\"class\", \"mensaje\", 4, \"ngIf\"], [1, \"d-flex\", \"mensajeRecibido\"], [1, \"hora\"], [1, \"mensaje\"], [1, \"d-flex\", \"mensajeEnviado\"], [1, \"estadoMsg\"], [1, \"msgChat2\"], [1, \"fa-regular\", \"fa-face-grin-beam\"], [\"type\", \"text\", \"placeholder\", \"Mensaje\", 3, \"keyup.enter\"], [\"texto\", \"\"], [1, \"fa-solid\", \"fa-envelope\", 3, \"click\"], [1, \"d-flex\", \"bloqueado\"], [\"type\", \"text\", \"placeholder\", \"Mensaje\", \"disabled\", \"\"], [1, \"fa-solid\", \"fa-envelope\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"header\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementStart(5, \"h1\");\n        i0.ɵɵtext(6, \"Chats\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"i\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n        i0.ɵɵelement(10, \"i\", 8);\n        i0.ɵɵtemplate(11, ChatComponent_div_11_Template, 2, 4, \"div\", 9);\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵtemplate(13, ChatComponent_h1_13_Template, 2, 2, \"h1\", 11);\n        i0.ɵɵtemplate(14, ChatComponent_h2_14_Template, 2, 1, \"h2\", 11);\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(17, ChatComponent_div_17_Template, 3, 0, \"div\", 12);\n        i0.ɵɵtemplate(18, ChatComponent_div_18_Template, 2, 1, \"div\", 13);\n        i0.ɵɵtemplate(19, ChatComponent_div_19_Template, 3, 0, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 15);\n        i0.ɵɵtemplate(21, ChatComponent_div_21_Template, 5, 0, \"div\", 16);\n        i0.ɵɵtemplate(22, ChatComponent_div_22_Template, 5, 0, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 18)(24, \"div\")(25, \"button\");\n        i0.ɵɵelement(26, \"i\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\")(28, \"button\");\n        i0.ɵɵelement(29, \"i\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\")(31, \"button\");\n        i0.ɵɵelement(32, \"i\", 21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 22)(34, \"button\");\n        i0.ɵɵelement(35, \"i\", 23);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.receptor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.receptor);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.actividad);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.fecha);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nuevo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.nuevo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bloqueado);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.bloqueado);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bloqueado);\n      }\n    },\n    directives: [i5.RouterLink, i6.NgIf, i6.NgForOf],\n    styles: [\"\"]\n  });\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}